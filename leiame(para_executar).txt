LINHAS DE COMANDO PARA EXECUTAR A APLICAÇÃO #WBF_Analyzer#:
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
-----------------------------------------------------------
Observação: Os comandos aqui descritos são para serem executados via prompt de comando do Windows.
A aplicação foi testada em uma máquina Windows 10 100% atualizada com 90 Gigabyte de ram 
O VsCode (versão 1.55.1) da microsoft foi utlizado como ambiente de desenvolvimento
o Node.js versão 12.18.3 foi utilizado para executar os códigos de JavaScript via prompt
A aplicação pode ser executada em linux, se os requistos de instalação forem satisfeitos, porém como
não testamos nesse ambiente não sabemos que dependências podem ser requisitadas pelo linux para a instalação
do VsCode ou do Node.js a execução via console também será diferente, pois o prompt é uma interface de terminal exclusiva do Windows.

*É importante também que as configurações de variáveis de ambiente do usuários estejam configuradas corretamente para o Node e para o Python

-----------------------------------------------------------
Inicialmente é necessário que a pasta "WBF_Analyzer" seja salva em uma pasta raiz, 
onde se possa passar o seguinte caminho relativo: 

"/WBF_Analyzer/../"

Obs: se ao baixar do github o nome da pasta principal for alterado para WBF_analyzer-master, o nome da pasta principal deve ser renomeado
para o seu nome normal, ou seja, WBF_analyzer.

A aplicação WBF_Analyzer foi feita para ser executada via prompt usando comandos 
do terminal do windows

Após isso, existem 3 situações que podem ser executadas:

**Situação 1 => Plantar uma semente
**Situação 2 => Passar uma lista de sites
**Situação 3 => Passar um caminho para uma base
------------------------------------------------------------------------------------------------
***Situação 1*** ==> Caso o usuário deseje plantar uma semente, ou seja, passar a URL
de apenas 1 site e apartir disso obter vários códigos extraídos é necessário usar o 
comando:

"/WBF_Analyzer/Pre-processamento/Extracao>py Crawler.py"

Depois de passar este comando para o prompt, o terminal exibirá uma mensagem pedindo
para o usuário inserir a URL do site que deseja-se crawlar, como:

Insira uma URL: https://www.ufam.edu.br 

Após isso, os blocos js ofuscados extraídos do site crawlado é salvo na pasta ofuscados,
e então passa-se o comando para o prompt:

"/WBF_Analyzer/Pre-processamento/Extracao>node desofuscacao.py"

Para realizar os tratamentos restantes
------------------------------------------------------------------------------------------------
***Situação 2*** ==>  Caso o usuário deseje passar uma lista de sites, ou seja, 
passar várias URLs e apartir disso obter vários códigos extraídos das páginas principais dos sites é necessário usar o 
comando:

"/WBF_Analyzer/Pre-processamento/Extracao>py Scraper.py"

Depois de passar este comando para o prompt, o terminal exibirá uma mensagem pedindo
para o usuário inserir as URLs dos sites que deseja-se crawlar, como:

---------------------------------------
Para não inserir mais URLs digite ok
---------------------------------------
Insira uma URL: https://www.ufam.edu.br 

Após isso, os blocos js ofuscados extraídos do site crawlado é salvo na pasta ofuscados,
e então passa-se o comando para o prompt:

"/WBF_Analyzer/Pre-processamento/Extracao/node desofuscacao.py"

Para realizar os tratamentos restantes
------------------------------------------------------------------------------------------------
***Situação 3*** Caso o usuário deseje passar um caminho para uma base, ou seja, passar
o caminho para uma pasta onde existem vários códigos a serem analisados, é necessário
usar o comando:

"/WBF_Analyzer/Pre-processamento/Extracao>node pre-processamento.js"

Depois de passar este comando para o prompt, o terminal exibirá uma mensagem pedindo
para o usuário inserir o caminho para a base, como:

/users/administrador/desktop/bt_5000

Após isso os tratamentos restantes são realizados
